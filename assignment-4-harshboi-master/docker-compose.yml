version: '3.7'
services:
  api:
    build: .
    image: assignment-4-api
    restart: always
    ports:
      - 8000:8000
    depends_on:
      - "rabbitmq"
    command: bash -c ' while !</dev/tcp/rabbitmq/5672; do sleep 1; done; npm start'
    environment:
      MONGO_DATABASE: ${MONGO_DATABASE}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_HOST: mongodb
      MONGO_PORT: 27017
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 15672

  worker:
    build:
      context: ./
      dockerfile: Dockerfile-worker
    image: assignment-4-worker
    restart: always
    ports:
      - 8001:8001
    depends_on:
      - "rabbitmq"
      - "mongodb"
    command: bash -c ' while !</dev/tcp/rabbitmq/5672; do sleep 1; done; node sizeWorker.js'
    environment:
      MONGO_DATABASE: ${MONGO_DATABASE}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_HOST: mongodb
      MONGO_PORT: 27017
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 15672

  mongodb:
    image: mongo:latest
    restart: always
    volumes:
      - mongo-data:/data/db
      - ./db-init/:/docker-entrypoint-initdb.d
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - 5672:5672
      - 15672:15672

volumes:
  mongo-data: